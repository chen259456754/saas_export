<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.itcast.dao.system.RoleDao">
    <resultMap type="cn.itcast.domain.system.Role" id="BaseResultMap">
        <id property="id" column="role_id" jdbcType="VARCHAR"/>
        <result property="name" column="name" jdbcType="VARCHAR"/>
        <result property="remark" column="remark" jdbcType="VARCHAR"/>
        <result property="orderNo" column="order_no" jdbcType="NUMERIC"/>
        <result property="createBy" column="create_by" jdbcType="VARCHAR"/>
        <result property="createDept" column="create_dept" jdbcType="VARCHAR"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateBy" column="update_by" jdbcType="VARCHAR"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
        <result property="companyId" column="company_id" jdbcType="VARCHAR"/>
        <result property="companyName" column="company_name" jdbcType="VARCHAR"/>
    </resultMap>

    <!--查询单个-->
    <select id="findById" resultMap="BaseResultMap">
        select role_id,
               name,
               remark,
               order_no,
               create_by,
               create_dept,
               create_time,
               update_by,
               update_time,
               company_id,
               company_name
        from pe_role
        where role_id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="BaseResultMap">
        select role_id,
               name,
               remark,
               order_no,
               create_by,
               create_dept,
               create_time,
               update_by,
               update_time,
               company_id,
               company_name
        from pe_role
        limit #{offset}, #{limit}
    </select>

    <!--查询所有-->
    <select id="findAll" resultMap="BaseResultMap">
        select role_id,
               name,
               remark,
               order_no,
               create_by,
               create_dept,
               create_time,
               update_by,
               update_time,
               company_id,
               company_name
        from pe_role
        where company_id = #{companyId}
    </select>

    <!--新增所有列-->
    <insert id="save" keyProperty="id" useGeneratedKeys="true">
        insert into pe_role(role_id, name, remark, order_no, create_by, create_dept, create_time, update_by,
                            update_time, company_id, company_name)
        values (#{id}, #{name}, #{remark}, #{orderNo}, #{createBy}, #{createDept}, #{createTime}, #{updateBy},
                #{updateTime}, #{companyId}, #{companyName})
    </insert>


    <!--通过主键修改数据-->
    <update id="update">
        update pe_role
        <set>
            <if test="name != null and name != ''">
                name = #{name},
            </if>
            <if test="remark != null and remark != ''">
                remark = #{remark},
            </if>
            <if test="orderNo != null">
                order_no = #{orderNo},
            </if>
            <if test="createBy != null and createBy != ''">
                create_by = #{createBy},
            </if>
            <if test="createDept != null and createDept != ''">
                create_dept = #{createDept},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="updateBy != null and updateBy != ''">
                update_by = #{updateBy},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
            <if test="companyId != null and companyId != ''">
                company_id = #{companyId},
            </if>
            <if test="companyName != null and companyName != ''">
                company_name = #{companyName},
            </if>
        </set>
        where role_id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="delete">
        delete
        from pe_role
        where role_id = #{id}
    </delete>
    <!--根据角色id删除中间表中的数据-->
    <delete id="deleteRoleModule">
        delete
        from pe_role_module
        where role_id = #{roleId}
    </delete>
    <!--向角色模块中间表中添加数据，param1、param2表示第一个和第二个参数-->
    <insert id="saveRoleModule">
        insert into pe_role_module (role_id, module_id)
        VALUES (#{param1}, #{param2})
    </insert>
</mapper>